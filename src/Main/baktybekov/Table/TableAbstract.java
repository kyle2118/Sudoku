package Main.baktybekov.Table;import java.util.Random;public class TableAbstract {    /////////////////////////////////////////////////////////////////////////////    /////     Properties                                                ////////    ///////////////////////////////////////////////////////////////////////////    protected static final int SIZE = 9;        // Size of the big table, consists of    public int getSize() { return SIZE; }       // nine 3x3 tables.    protected static final int SIZE2 = 3;       // Size of the small table    public int getSize2() { return SIZE2; }    protected int difficulty;                   // Difficulty level    private int [][] table;    public static final int [][] SOLUTION =                {   {2,9,5,7,4,3,8,6,1},                    {4,3,1,8,6,5,9,2,7},                    {8,7,6,1,9,2,5,4,3},                    {3,8,7,4,5,9,2,1,6},                    {6,1,2,3,8,7,4,9,5},                    {5,4,9,2,1,6,7,3,8},                    {7,6,3,5,2,4,1,8,9},                    {9,2,8,6,7,1,3,5,4},                    {1,5,4,9,3,8,6,7,2}  };    /////////////////////////////////////////////////////////////////////////////    /////     Constructors                                              ////////    ///////////////////////////////////////////////////////////////////////////    TableAbstract() { this(60); } // Default constructor    TableAbstract(int difficulty) {        this.difficulty = difficulty;        table = generateNewTable(SOLUTION);    }    /////////////////////////////////////////////////////////////////////////////    /////     Methods                                                   ////////    ///////////////////////////////////////////////////////////////////////////    protected int getCell(int i, int j) { return table[i][j]; }    /*        Next method creates a new table from the solution,        randomly two chosen numbers to be changed in the table.        num1 and num2 change in all table.        30 times to choose two random numbers and change them.        Method mixes the solution.     */    protected static int [][] generateNewTable(int [][] arr) {        Random random = new Random();        int num1, num2;        for (int k = 0; k < 30; k++) {            num1 = random.nextInt(8) + 1;            num2 = random.nextInt(8) + 1;            for (int i = 0; i < SIZE; i++) {                for (int j = 0; j < SIZE; j++) {                    if (arr[i][j] == num1) arr[i][j] = num2;                    else if (arr[i][j] == num2) arr[i][j] = num1;                }            }        }        return arr;    }    // Shows table on the console. Method is needed only to check matrix and tableview    protected void printTable() {        for (int i = 0; i < SIZE; System.out.println(), i++)            for (int j = 0; j < SIZE; j++)                System.out.print(table[i][j] + " ");    }//    public static void printSolution() {//        for (int i = 0; i < SIZE; System.out.println(), i++)//            for (int j = 0; j < SIZE; j++)//                System.out.print(SOLUTION[i][j] + " ");//    }}